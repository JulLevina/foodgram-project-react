name: foodgram workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return
          pip install -r ./backend/requirements.txt
      - name: Lint with flake8
        run: flake8 .
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          contex: backend/
          file: backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram:latest
      - name: Push to Docker Hub frontend
        uses: docker/build-push-action@v2
        with:
          contex: frontend/
          file: frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/infra_frontend:latest
  create-envfile:
    runs-on: ubuntu-latest
    steps:
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_DB_ENGINE: ${{ secrets.DB_ENGINE }}
          envkey_DB_NAME: ${{ secrets.DB_NAME }}
          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          envkey_DB_HOST: ${{ secrets.DB_HOST }}
          envkey_DB_PORT: ${{ secrets.DB_PORT }}
          envkey_SECRET_KEY: "${{ secrets.SECRET_KEY }}"
          file_name: .env
  deploy:
    runs-on: ubuntu-latest
    needs: [build_and_push_to_docker_hub, create-envfile]
    if: success() && github.ref == 'refs/heads/master'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          context: infra
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/api_yamdb:latest
            sudo docker compose down
            sudo docker compose rm web
            sudo docker compose up -d
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ job.status }}

